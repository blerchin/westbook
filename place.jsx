#include "json2.js"#include "underscore.js"var storyFile = File("/opt/westbook/ben_lerchin.com.json");var stories = null;var content;storyFile.open('r');content = storyFile.read();stories = JSON.parse(content);storyFile.close();stories = _.sortBy(stories, function(s) { return (s.story && -1 * s.story.length) || 0 });var styles = [    "source",    "headline",    "deck",    "story",    "link"];var document = app.open("/opt/westbook/westbook-template.indd");var frames= document.textFrames;for (var i=0; i < frames.length; i++) {   fillFrame(frames[i]); }function getRequirements(group) {    var requirements = group.name.split("::")[1];    if (!requirements || "-1" == group.name.indexOf('story')) {        return false;    }    return requirements.split(",");}function findStory(requirements) {    var story = null;    var id = 0;    var cur;    var ok;    var req;    var props;    var clean;    while (!story && id < stories.length) {        cur = stories[id];        props = _.filter(_.keys(cur), function(i) {            return cur[i] && cur[i].length && i !== "id";        });                ok = true;                if (_.contains(requirements, "story")) {            ok = ok && _.contains(props, "story");        }            if (_.contains(requirements, "image")) {            ok = ok && _.contains(props, "image");        }        if (ok && !cur.used) {            story = cur;            story.used = true;        }        id++;    }    return story;}function addImage(story, frame) {    var graf = frame.parentStory.paragraphs.lastItem()    var insertPoint = graf.insertionPoints.lastItem();    insertPoint.contents = "\r";    insertPoint.applyParagraphStyle(document.paragraphStyles.item("storyfirst"));    var inlineFrame = insertPoint.textFrames.add();    inlineFrame.texts.item(0).recompose();    var inlineBounds = inlineFrame.geometricBounds;    var width = frame.geometricBounds[3] - frame.geometricBounds[1];    inlineFrame.geometricBounds = [inlineBounds[0], inlineBounds[1], inlineBounds[0] + width/2, inlineBounds[1] + width];    with(inlineFrame.anchoredObjectSettings){        anchoredPosition = AnchorPosition.anchored;        anchorPoint = AnchorPoint.topLeftAnchor;        anchorYoffset = -.5;   }    inlineFrame.textWrapPreferences.textWrapMode = TextWrapModes.BOUNDING_BOX_TEXT_WRAP;    inlineFrame.place(story.image);    inlineFrame.pageItems.everyItem().fit(FitOptions.fillProportionally);}function addStory(story, frame) {    var graf = frame.parentStory.paragraphs.lastItem()    var insertPoint = graf.insertionPoints.lastItem();    insertPoint.contents = "\r";    var inlineFrame = insertPoint.textFrames.add();    var inlineBounds = inlineFrame.geometricBounds;    var width = frame.geometricBounds[3] - frame.geometricBounds[1];    var height = inlineFrame.geometricBounds[0] - frame.geometricBounds[2];    inlineFrame.geometricBounds = [inlineBounds[0], inlineBounds[1], inlineBounds[0] + height, inlineBounds[1] + width];    with(inlineFrame.anchoredObjectSettings){        anchoredPosition = AnchorPosition.anchored;        anchorPoint = AnchorPoint.topLeftAnchor;   }    inlineFrame.contents = story.story;    var columnWidth = document.documentPreferences.pageWidth / 5;    var columnCount = Math.round(width / columnWidth);    inlineFrame.textFramePreferences.textColumnCount = Math.round(width / columnWidth);    inlineFrame.paragraphs.everyItem().applyParagraphStyle(document.paragraphStyles.item("story"));    inlineFrame.paragraphs.firstItem().applyParagraphStyle(document.paragraphStyles.item("storyfirst"));    if (columnCount < 3) {        inlineFrame.paragraphs.firstItem().applyParagraphStyle(document.paragraphStyles.item("storyfirst"));    } else {        inlineFrame.paragraphs.firstItem().applyParagraphStyle(document.paragraphStyles.item("storydrop"));    }    // Add Link    var linkFrame = inlineFrame.paragraphs.firstItem().insertionPoints.firstItem().textFrames.add();    linkFrame.geometricBounds = [frame.geometricBounds[2] - 1.9, frame.geometricBounds[3] - columnWidth + 1, frame.geometricBounds[2] , frame.geometricBounds[3]];    linkFrame.contents = story.link;    with(linkFrame.anchoredObjectSettings) {        anchoredPosition = AnchorPosition.anchored;        horizontalReferencePoint = AnchoredRelativeTo.textFrame;        verticalReferencePoint = AnchoredRelativeTo.textFrame;        anchorPoint = AnchorPoint.bottomRightAnchor;        anchorYoffset = -1 * height - .2;        anchorXoffset = -1 * width - 1;    }    linkFrame.textWrapPreferences.textWrapMode = TextWrapModes.BOUNDING_BOX_TEXT_WRAP;    linkFrame.paragraphs.everyItem().applyParagraphStyle(document.paragraphStyles.item("link"));}function fillFrame(frame) {    var reqs = getRequirements(frame);    if (!reqs) {        return false;    }    var story = findStory(reqs);    if (!story) {        return false;    }    var i, cur, style;    frame.parentStory.contents = "";    var usedStyles = [];    if (_.contains(reqs, "source")) {        usedStyles.push("source");        frame.parentStory.contents += story.source + "\r";    }    if (_.contains(reqs, "headline")) {        usedStyles.push("headline");        if (story.headline && story.headline.length) {            frame.parentStory.contents += story.headline + "\r";        } else {            frame.parentStory.contents += story.deck + "\r";        }    }   if (_.contains(reqs, "deck")) {        usedStyles.push("deck");        frame.parentStory.contents += story.deck+ "\r";    }    var i;    for (i=0; i < usedStyles.length; i++) {        frame.parentStory.paragraphs.item(i).applyParagraphStyle(document.paragraphStyles.item(usedStyles[i]));    }    if (_.contains(reqs, "image")) {       addImage(story, frame);    }    if (_.contains(reqs, "story")) {        addStory(story, frame);    }    if (_.contains(reqs, "link")) {        usedStyles.push("link");        //frame.parentStory.contents += story.link;        //frame.parentStory.paragraphs.lastItem().applyParagraphStyle(document.paragraphStyles.item("link"));    }}